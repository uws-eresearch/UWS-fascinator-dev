<?xml version="1.0" encoding="UTF-8" ?>
<schema name="fascinator2" version="1.1">
  <types>
    <!-- verbatim -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" />

    <!-- true or false -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true" />

    <!-- unsorted numeric fields -->
    <fieldType name="integer" class="solr.IntField" omitNorms="true" />
    <fieldType name="long" class="solr.LongField" omitNorms="true" />
    <fieldType name="float" class="solr.FloatField" omitNorms="true" />
    <fieldType name="double" class="solr.DoubleField" omitNorms="true" />

    <!-- sortable numeric fields -->
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true" />
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true" />
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true" />
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true" />

    <!-- date field format: 1995-12-31T23:59:59(.999)Z -->
    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true" />

    <!-- used for pseudo-random ordering -->
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <!-- a text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
      </analyzer>
    </fieldType>

    <!-- a text field that uses WordDelimiterFilter to enable splitting and matching
         of words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
         so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
         Synonyms and stopwords are customized by external files, and stemming is enabled.
         Duplicate tokens at the same position (which may result from Stemmed Synonyms or
         WordDelim parts) are removed. -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt" />
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt" />
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- less flexible matching, but less false matches. probably not ideal for product names,
         but may be good for SKUs. can insert dashes in the wrong place and still match. -->
    <fieldType name="textTight" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt" />
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- setup simple analysis for spell checking -->
    <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- this is an example of using the KeywordTokenizer along with various
         TokenFilterFactories to produce a sortable field that does not include
         some properties of the source text -->
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all" />
      </analyzer>
    </fieldType>

    <!-- Similar to above, but allows for alphanumeric text with spaces -->
    <fieldType name="alphaNumSort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z0-9\s])" replacement="" replace="all" />
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed, any data
         added to them will be ignored outright -->
    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />
  </types>

  <fields>
    <!--
      valid attributes for fields:
        name: mandatory - the name for the field
        type: mandatory - the name of a previously defined type from the <types> section
        indexed: true if this field should be indexed (searchable or sortable)
        stored: true if this field should be retrievable
        compressed: [false] if this field should be stored using gzip compression
                    (this will only apply if the field type is compressable; among
                    the standard field types, only TextField and StrField are)
        multiValued: true if this field may contain multiple values per document
        omitNorms: (expert) set to true to omit the norms associated with this
                   field (this disables length normalization and index-time boosting
                   for the field, and saves some memory). Only full-text fields or
                   fields that need an index-time boost need norms.
        termVectors: [false] set to true to store the term vector for a given
                     field. When using MoreLikeThis, fields used for similarity
                     should be stored for best performance. -->

    <field name="id" type="string" indexed="true" stored="true" required="true" />
    <field name="storage_id" type="string" indexed="true" stored="true" />
    <field name="last_modified" type="date" indexed="true" stored="true" />
    <field name="item_type" type="string" indexed="true" stored="false" />
    <field name="file_path" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="source_name" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="source_type" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="full_text" type="text" indexed="true" stored="false" multiValued="true" />
    <field name="harvest_config" type="string" indexed="true" stored="true" />
    <field name="harvest_rules" type="string" indexed="true" stored="true" />
    <field name="thumbnail" type="string" indexed="true" stored="true" />
    <field name="preview" type="string" indexed="true" stored="true" />
    <field name="altpreview" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="display_type" type="string" indexed="true" stored="true" />
    <field name="preview_type" type="string" indexed="true" stored="true" />
    <field name="user_agreement_text" type="string" indexed="true" stored="true" />
    <field name="user_agreement_title" type="string" indexed="true" stored="true" />
    <field name="user_agreement_accept" type="string" indexed="true" stored="true" />
    <field name="user_agreement_cancel" type="string" indexed="true" stored="true" />

    <!-- Workflow/Security fields -->
    <field name="security_filter" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="security_exception" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="hidden_flag" type="boolean" indexed="true" stored="true" />
    <field name="owner" type="string" indexed="true" stored="true" />
    <field name="workflow_id" type="string" indexed="true" stored="true" />
    <field name="workflow_step" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="workflow_step_label" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="workflow_security" type="string" indexed="true" stored="true" multiValued="true" />

    <!-- dublin core fields -->
    <field name="dc_contributor" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_coverage" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_creator" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_date" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_description" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_format" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_identifier" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_language" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_publisher" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_relation" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_rights" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_source" type="text" indexed="true" stored="true" multiValued="true" />
    <field name="dc_subject" type="text" indexed="true" stored="true" multiValued="true" />
    <!-- sortable ie. non-multi-valued -->
    <field name="dc_title" type="text" indexed="true" stored="true" />
    <field name="dc_type" type="text" indexed="true" stored="true" />

    <!-- faceted -->
    <field name="f_dc_contributor" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_coverage" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_creator" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_date" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_description" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_format" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_identifier" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_language" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_publisher" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_relation" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_rights" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_source" type="string" indexed="true" stored="false" multiValued="true" />
    <field name="f_dc_subject" type="string" indexed="true" stored="false" multiValued="true" />

    <!-- Faceted but sortable ie. non-multivalued -->
    <field name="f_dc_title" type="string" indexed="true" stored="false" />
    <field name="f_dc_type" type="string" indexed="true" stored="false" />

    <!--
      Dynamic field definitions. If a field name is not found, dynamicFields
      will be used if the name matches any of the patterns. RESTRICTION: the
      glob-like pattern in the name attribute must have a "*" only at the start
      or the end. EXAMPLE: name="*_i" will match any field ending in _i
      (like myid_i, z_i) Longer patterns will be matched first. if equal size
      patterns both match, the first appearing in the schema will be used.
    -->
    <dynamicField name="int_*" type="sint" indexed="true" stored="true" />
    <dynamicField name="text_*" type="text" indexed="true" stored="true" />
    <dynamicField name="str_*" type="string" indexed="true" stored="true" />
    <dynamicField name="bool_*" type="boolean" indexed="true" stored="true" />
    <dynamicField name="float_*" type="sfloat" indexed="true" stored="true" />
    <dynamicField name="date_*" type="date" indexed="true" stored="true" />
    <!-- Dynamic sorting field. Not stored. -->
    <dynamicField name="sort_text_*" type="alphaNumSort" indexed="true" stored="false" />

    <dynamicField name="*" type="string" indexed="true" stored="true" multiValued="true" />
  </fields>

  <!-- field to use to determine and enforce document uniqueness. unless this
       field is marked with required="false", it will be a required field -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <defaultSearchField>full_text</defaultSearchField>

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="OR" />

  <!-- copyField commands copy one field to another at the time a document
       is added to the index.  It's used either to index the same field
       differently, or to add multiple fields to the same field for easier/faster
       searching. -->
  <copyField source="dc_contributor" dest="f_dc_contributor" />
  <copyField source="dc_coverage" dest="f_dc_coverage" />
  <copyField source="dc_creator" dest="f_dc_creator" />
  <copyField source="dc_date" dest="f_dc_date" />
  <copyField source="dc_description" dest="f_dc_description" />
  <copyField source="dc_format" dest="f_dc_format" />
  <copyField source="dc_identifier" dest="f_dc_identifier" />
  <copyField source="dc_language" dest="f_dc_language" />
  <copyField source="dc_publisher" dest="f_dc_publisher" />
  <copyField source="dc_relation" dest="f_dc_relation" />
  <copyField source="dc_rights" dest="f_dc_rights" />
  <copyField source="dc_source" dest="f_dc_source" />
  <copyField source="dc_subject" dest="f_dc_subject" />
  <copyField source="dc_title" dest="f_dc_title" />
  <copyField source="dc_type" dest="f_dc_type" />
  <!-- Sortable text fields -->
  <copyField source="dc_title" dest="sort_text_title" />
  <copyField source="dc_type" dest="sort_text_type" />

  <copyField source="*" dest="full_text" />

</schema>
