#set($oid = $metadata.get("id"))
#set($mimeType = $metadata.getFirst("dc_format"))
#set($thumbnail = $metadata.get("thumbnail"))
#set($preview = $metadata.get("preview"))

#if($renderContent)
<script type="text/javascript" src="$portalPath/flowplayer/flowplayer-3.1.4.min.js"></script>
<script type="text/javascript" src="$portalPath/js/modernizr-1.5.min.js"></script>

<script type="text/javascript" src="$portalPath/mediaplayer/jwplayer.js"></script>
<script type="text/javascript" src="$portalPath/mediaplayer/swfobject.js"></script>

<script type="text/javascript">
<!--
    $(function() {
        function getStyle(width, height) {
            return "width: " + width + "px; height: " + height + "px;";
        }

        var oid = "$oid";
        var filename = "$parent.getFileName()";
        var ext = "$parent.getFileNameSplit(1).toLowerCase()";
        var mimeType = "$mimeType";
        var player = {};
        var width = 425;
        var height = 300;
        if (mimeType.indexOf("audio/") == 0) {
            height = 24;
        }
        var style = getStyle(width, height);
        var previewPid = "$!parent.getPreviewPid()";
        if (previewPid != "") {
            filename = previewPid;
        }

        var thumbnail = "$thumbnail";

        if (filename != "" || ext == "mp3" || ext == "m4a") {
            var href = "$portalPath/download/$oid/" + filename;

            var widthHeight = 'width="' + width + '" height="' + height + '"';

            // This information will be retrieved from the ffmpeg.info
            // For now assume all mp4 is using h264 codec
            var format = "mp4";
            var codec = "h264";

            var test = Modernizr.video && Modernizr.video[codec] && format=="mp4";
            player1 = '';
            if (test == true || test=="probably") {
                player1 = '<video '+ widthHeight +' controls>'+
                    '<source src="'+filename+'" '

                #if ($thumbnail)
                    player1 += 'poster = "'+thumbnail+'" '
                #end

                player1 += 'type=\'video/mp4; codecs="avc1.42E01E, mp4a.40.2"\'>'+
                    '<a href='+ href +'>Download this video</a>' +
                    '</video>'

                $("#player-container").attr("style", style).html(player1);
            } else {
                // Get the flv, for now hardcoded
                href = "$portalPath/download/$oid/" + "$parent.getFileNameSplit(0)" + ".flv";
                player1 = '<p id="player" style="' + style + '"></p>';
                $("#player-container").attr("style", style).html(player1);
                jwplayer("player").setup({
                    flashplayer: "$portalPath/mediaplayer/player.swf",
                    file: href,
                    height: height, width: width,
                    ##start: 3,
                    ##duration: 10,

                    #if ($thumbnail)
                        image: thumbnail
                    #end
                });
            }

        }

        #*if (filename != "" || ext == "mp3" || ext == "m4a") {
            var href = "$portalPath/download/$oid/" + filename;
            var player1 = '<a href="' + href + '" id="player" style="' + style + '"></a>';
            var test = Modernizr.video && Modernizr.video["h264"];
            player = flowplayer("player", {src:"$portalPath/flowplayer-3.2.5/flowplayer-3.2.5.swf", wmode:'opaque'},
                { clip: { autoPlay: false, autoBuffering: true },
                  play: {
                    label: "Play",
                    replayLabel: "Click to play again"
                  }
                });
        }*#
        ## Annotation controls required for detail mode only
        #if($parent.isDetail())
            $("#player_seek_start").live("click", function() {
                player.seek(0);
            });
            $("#player_rewind").live("click", function() {
                player.seek(player.getTime() - 1);
            });
            $("#player_play").live("click", function() {
                player.toggle();
            });
            $("#player_forward").live("click", function() {
                player.seek(player.getTime()+1);
            });
            $("#player_seek_end").live("click", function() {
                player.seek(player.getClip().fullDuration-1);
                player.pause();
            });

            $("#player_mark_start_time").live("click", function() {
                $("#txtStartMark").attr("value", player.getTime());
                $("#player_mark_end_time").attr("disabled", false);
                $("#txtEndMark").attr("disabled", false);
            });

            $("#txtStartMark").live("keyup", function() {
                txtStartMarkVal = $('#txtStartMark').val();
                if (txtStartMarkVal != "") {
                    $("#player_mark_end_time").attr("disabled", false);
                    $("#txtEndMark").attr("disabled", false);
                } else {
                    $("#player_mark_end_time").attr("disabled", true);
                    $("#txtEndMark").attr("disabled", true);
                }
            });

            $("#player_mark_end_time").live("click", function() {
                $("#txtEndMark").attr("value", player.getTime());
                start = $('#txtStartMark').val();
                end = $('#txtEndMark').val();
                processClip(start, end);
            });

            $("#txtEndMark").live("keyup", function() {
                start = $('#txtStartMark').val();
                end = $('#txtEndMark').val();
                processClip(start, end);
            });

            function processClip(start, end) {
                uri = player.getClip().url + "#";
                if (start != "" && end != "") {
                    //Use Normal Play Time as described in http://www.ietf.org/rfc/rfc2326.txt
                    uri += "t=npt:";
                    if (start != "" && start > 0) {
                        uri += start + "s"
                        if (player.getClip().duration < start) {
                            //warning += "<li>The requested start-point is greater than the video's duration.</li>";
                        }
                    }
                    if (end != "") {
                        uri += "," + end + "s";
                        if (player.getClip().duration < end) {
                            //warning += "<li>The requested end-point is greater than the video's duration.</li>";
                        }
                    }
                }
                $(".video-results-list").attr("rel", uri);
            }

            $(".player_clear_fragment").live("click", function() {
                $("#txtStartMark").attr("value", "");
                $("#txtEndMark").attr("value", "");
                $("#media_clip").attr("rel", "");
                if (player.getClip()) {
                    player.pause();
                    player.getClip().update({duration:player.getClip().fullDuration});
                }
            });

            $("#player_play_fragment").live("click", function() {
                player.pause();
                player.seek($('#txtStartMark').val());
                player.getClip().update({duration:$('#txtEndMark').val()});
                player.play();
            });

            $(".player_play_clip").live("click", function() {
                player.pause();
                var startTime = $(this).siblings(".startTime").text().replace("s", "");
                var endTime = $(this).siblings(".endTime").text().replace("s", "");
                player.seek(startTime);
                player.getClip().update({duration:endTime});
                player.play();
                $(".player_reset").removeAttr("disabled");
            });

            $(".player_reset").click(function() {
                if (player.getClip()) {
                    player.pause();
                    player.getClip().update({duration:player.getClip().fullDuration});
                    player.seek(0);
                    $(this).attr("disabled", "disabled");
                }
            });
        #end
    });
-->
</script>
#end
