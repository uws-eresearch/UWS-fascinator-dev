var jQ=jQuery;var rvtFactory=function(jQ){var rvt={};var pages={};var homePage;var nodes;rvt.contentBaseUrl="";rvt.serverRequestTemplate=null;rvt.contentSelector="#content";rvt.titleSelector="#contents-title";rvt.tocSelector="#toc .toc";rvt.contentScrollToTop=function(){jQ(window).scrollTop(0);};rvt.contentLoadedCallback=null;rvt.loadingMessage="Loading. Please wait...";rvt.ignoreTest=function(hash){return false;}
rvt.contentParser=function(content){var href,anchors={};var a=window.location.hash.split("#",2).slice(1)[0];baseUri=rvt.contentBaseUrl;if(baseUri[baseUri.length-1]!=="/")baseUri+="/";baseUri+=a.split("/").slice(0,-1).join("/");if(baseUri[baseUri.length-1]!=="/")baseUri+="/";function updateUri(node,attrName){var attribute=node.attr(attrName);function testIfLocalUri(uri){if(!uri){return false;}
return uri.search(/^\/|\:\/\//g)===-1;}
if(testIfLocalUri(a)){node.attr(attrName,baseUri+attribute);}}
content.find("a").each(function(c,a){a=jQ(a);href=a.attr("href");if(href){if(href.substring(0,1)==="#"){a.attr("href","#"+hash+href);anchors[href.substring(1)]=hash+href;}else{if(href=getHPath(href)){a.attr("href","#"+href);}}}});content.find("a").each(function(c,a){var id,name;a=jQ(a);id=a.attr("id");name=a.attr("name");if(anchors[id]){a.attr("name",anchors[id]);}else if(anchors[name]){a.attr("name",anchors[name]);}});content.find("*[src]").each(function(c,node){node=jQ(node);updateUri(node,"src");});content.find("object").each(function(c,node){node=jQ(node);updateUri(node,"data");updateUri(node,"codebase");node.find("param[name='movie'],param[name='url'],param[name='media']").each(function(c,node){node=jQ(node);updateUri(node,"value");});});};rvt.updateContent=function(content){var contentDiv=jQ(rvt.contentSelector);rvt.contentParser(content);contentDiv.html(content);if(content.is(":visible")){try{contentDiv.find("#loadingMessage").remove();if(rvt.contentLoadedCallback){rvt.contentLoadedCallback(rvt);}}catch(e){alert("Error calling loadedContentCallback: "+e)}}else{try{content.show();}catch(e){alert("Error in loading content: "+e);}}
window.location.hash=window.location.hash;};rvt.setTitle=function(title){jQ(rvt.titleSelector).html(title);};rvt.getManifestJson=function(jsonFilename){if(!jsonFilename){jsonFilename="manifest.json";}
jQ.get(jsonFilename,{},processManifestJson,"json");};rvt.displayTOC=function(nodes){function getList(data){var items=[];var list="";data.forEach(function(i){if(i.visible!==false){var href=(i.relPath||i.attributes.id);var title=i.title||i.data;var children="";if(i.children){children=getList(i.children);}
if(href.substring(href.length-4)===".htm"){href="#"+href;}
items.push("<li><a href='"+href+"'>"+title+"</a>"+children+"</li>");}});if(items.length){list="<ul>\n"+items.join("\n")+"</ul>\n";}
return list;}
jQ(rvt.tocSelector).html(getList(nodes));function onLocationChange(location,data){hash=data.hash;hash=hash.split("#")[0];jQ("a").removeClass("link-selected");jQ("a[href='#"+hash+"']").addClass("link-selected");}
jQ(window.location).change(onLocationChange);};function processManifestJson(data){rvt.setTitle(data.title);homePage=data.homePage;manifest=data.toc||data.nodes;nodes=[];jQ.each(manifest,function(c,node){var visible=(node.visible!==false);if(visible)nodes.push(node);});function multiFormat(c,node){var visible=(node.visible!==false);var id=(node.relPath||node.attributes.id);var title=(node.title||node.data);if(!node.attributes){node.attributes={};}
node.visible=visible;node.relPath=id;node.attributes.id=id;node.title=title;node.data=title;jQ.each(node.children,multiFormat);}
jQ.each(nodes,multiFormat);if(!homePage||homePage=="toc.htm"){if(nodes.length>0){homePage=nodes[0].relPath;if(!window.location.hash){window.location.hash=homePage;}}else{homePage="";rvt.updateContent("[No content]");}}
rvt.displayTOC(nodes);checkForLocationChange();setInterval(checkForLocationChange,100);}
function checkForLocationChange(){if(checkForLocationChange.href!==window.location.href){var hashOnly=false;hash=window.location.hash;if(hash.length){hash=hash.substring(1);}
if(checkForLocationChange.href){var oldHash=checkForLocationChange.href.split("#",1)[0];var currentHash=window.location.href.split("#",1)[0];hashOnly=(oldHash===currentHash);}
checkForLocationChange.href=window.location.href;jQ(window.location).trigger("change",{"hash":hash,"hashOnly":hashOnly});}}
function onLocationChange(location,data){hash=data.hash;hash=hash.split("#")[0];if(data.hashOnly){if(hash===onLocationChange.hash)return;}
onLocationChange.hash=hash;if(hash===""){hash=homePage;}
if(rvt.ignoreTest(hash)){if(rvt.contentLoadedCallback){rvt.contentLoadedCallback(rvt);}
rvt.contentScrollToTop();return;}
if(pages[hash]){rvt.updateContent(pages[hash]);rvt.contentScrollToTop();return;}
function getHPath(path){var ourParts,ourDepth,upCount=0,depth,hPath;if(path.slice(0,1)==="/"||path.search("://")>0)return null;ourParts=hash.split("/");ourDepth=ourParts.length-1;path=path.replace(/[^\/\.]+\/\.\.\//g,"");path=path.replace(/\.\.\//g,function(m){upCount+=1;return"";});depth=ourDepth-upCount;if(depth<0)return null;hPath=ourParts.slice(0,depth).concat(path.split("/")).join("/");return hPath}
function callback(data){var jqData=$("<div/>");jqData.hide();jqData.html(data);var pageToc=jqData.find("div.page-toc");var body=jqData.find("div.body");if(body.size()==0){pages[hash]=data;rvt.updateContent(jQ(data));rvt.contentScrollToTop();return;}
body.find("div.title").show().after(pageToc);var html=body.find(">div");if(html.size()==0){pages[hash]=data;rvt.updateContent(body);rvt.contentScrollToTop();return;}
jqData.find("div.rendition-links").each(function(c,node){html.prepend("<div class='rendition-links'><span class='heading'>Renditions</span>"+unescape(jQ(node).html())+"</div>");});pages[hash]=html;rvt.updateContent(pages[hash]);rvt.contentScrollToTop();}
rvt.updateContent(jQ("<div style='display:none;' id='loadingMessage'>"+rvt.loadingMessage+"<div>"));rvt.contentScrollToTop();if(rvt.serverRequestTemplate){thisUrl=rvt.serverRequestTemplate.replace("{rvtHash}",hash);jQ.get(thisUrl,{},callback,"html");}else{jQ.get(rvt.contentBaseUrl+hash,{},callback,"html");}}
jQ(window.location).change(onLocationChange);rvt.processManifestJson=processManifestJson;return rvt;};