#macro(editableText $id $suffix $value)
<span class="field-text visible">$value</span>
<div class="field-form hidden" id="${id}-${suffix}">
    <input class="field-input" name="${id}-${suffix}" type="text" value="$value" />
    <a class="accept" href="#"><img alt="Accept" src="$portalPath/images/icons/tick.png" /></a>
    <a class="cancel" href="#"><img alt="Cancel" src="$portalPath/images/icons/cross.png" /></a>
</div>
#end
#macro(facetRow $id $field $label $display $extraClass)
<tr id="$id" class="facets-row $extraClass">
    <td>
        <img class="facets-grip" src="$portalPath/images/icons/grippy.png" />
        #editableText($id "field" $field)
    </td>
    <td>#editableText($id "label" $label)</td>
    <td>
        #set($facetDisplays = $self.getFacetDisplays())
        <span class="field-text visible">$facetDisplays.get($display)</span>
        <div class="field-form hidden" id="${id}-display">
            <select class="field-input" name="facets-display">
            #foreach($facetDisplayKey in $facetDisplays.keySet())
                #set($facetDisplay = $facetDisplays.get($facetDisplayKey))
                <option name="$facetDisplayKey"#if($display==$facetDisplayKey) selected="selected"#end>$facetDisplay</option>
            #end
            </select>
            <a class="accept" href="#"><img alt="Accept" src="$portalPath/images/icons/tick.png" /></a>
            <a class="cancel" href="#"><img alt="Cancel" src="$portalPath/images/icons/cross.png" /></a>
        </div>
    </td>
    <td>
        <input class="facets-delete" name="facets-delete" type="checkbox" value="$id" />
    </td>
</tr>
#end
#macro(sortRow $id $field $label $extraClass)
<tr id="$id" class="sort-row $extraClass">
    <td>
        <img class="sort-grip" src="$portalPath/images/icons/grippy.png" />
        <input class="sort-default" name="sort-default" type="radio" value="$field"#if($self.portal.sortFieldDefault==$field) checked="checked"#end />
    </td>
    <td>#editableText($id "field" $field)</td>
    <td>#editableText($id "label" $label)</td>
    <td>
        <input class="sort-delete" name="sort-delete" type="checkbox" value="$id" />
    </td>
</tr>
#end
#macro(watcherRow $id $stopped $path $fileFilter $dirFilter $extraClass)
<tr id="$id" class="watcher-row $extraClass">
    <td>
        <input class="watcher-active" name="watcher-active" type="checkbox" value="$id" #if($stopped=="false")checked="checked"#end />
    </td>
    <td>#editableText($id "path" $path)</td>
    <td>#editableText($id "file" $fileFilter)</td>
    <td>#editableText($id "dir" $dirFilter)</td>
    <td>
        <input class="watcher-delete" name="watcher-delete" type="checkbox" value="$id" />
    </td>
</tr>
#end
#macro(category $id $label)
<li><a id="${id}-category" class="category" href="#" rel="$id">$label</a></li>
#end

#set($pageTitle = "Settings")
<h2 id="page-heading"><span>Settings</span></h2>
#set($renderSettingsForms = true)

#########################
###  Admin login required

#if(!$page.authentication.is_admin())
    #set($renderSettingsForms = false)
    <div class="box">
        <div class="block">
            <div class="login-error">
                Sorry, but you need to be logged in as an administrator to use this screen.
            </div>
        </div>
    </div>
#end

#########################
###  Render page

#if($renderSettingsForms)
<div class="grid_4">
    #set($menuTitle = "Category")
    #parseTemplate("wrapping/main-menu-open.vm")
    <ul class="menu">
        #category("general" "General")
        #category("view" "View")
        #category("facets" "Facets")
        #category("sort" "Sort by")
        #category("watcher" "Watcher")
        #category("housekeeping" "House Keeping")
    </ul>
    #parseTemplate("wrapping/main-menu-close.vm")
</div>
<div id="form-section" class="grid_12">
    #set($menuId = "general-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "General")
    #parseTemplate("wrapping/info-box-open.vm")
    <form class="block category-form" id="general-form" method="post">
        <fieldset class="login">
            <p>
                <label for="general-email">Email address</label>
                <input id="general-email" name="general-email" type="text" value="$self.getEmail()" />
            </p>
        </fieldset>
        <p><b>Note:</b> Changing email address requires a restart to take effect.</p>
    </form>
    <button class="update">Update</button>
    <button class="cancel">Cancel</button>
    <img class="hidden" id="general-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
    <span id="general-message"></span>
    #parseTemplate("wrapping/info-box-close.vm")
    #set($menuId = "view-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "View")
    #parseTemplate("wrapping/info-box-open.vm")
    <form class="block category-form" id="view-form" method="post">
        <fieldset class="login">
            <p>
                <label for="view-id">Identifier</label>
                <input disabled="disabled" id="view-id" name="view-id" type="text" value="$self.portal.name" />
            </p>
            <p>
                <label for="view-description">Description</label>
                <input id="view-description" name="view-description" type="text" value="$page.escapeXml($self.portal.description)" />
            </p>
            <p>
                <label for="view-query">Query</label>
                <input id="view-query" name="view-query" type="text" value="$page.escapeXml($self.portal.query)" />
            </p>
            <p>
                <label for="view-search-query">Search Query</label>
                <input id="view-search-query" name="view-search-query" type="text" value="$page.escapeXml($self.portal.searchQuery)" />
            </p>
            <p>
                <label for="view-records-per-page">Records per page</label>
                <input id="view-records-per-page" name="view-records-per-page"  type="text" value="$self.portal.recordsPerPage" />
            </p>
            <p>
                <label for="view-facet-count">Facet count limit</label>
                <input id="view-facet-count" name="view-facet-count" type="text" value="$self.portal.facetCount" />
            </p>
            <p>
                <label for="view-facet-display">Facet display count (minimum)</label>
                <input id="view-facet-display" name="view-facet-display" type="text" value="$self.portal.facetDisplay" />
            </p>
            <p>
                <label for="view-facet-sort">Sort by facet counts</label>
                <input id="view-facet-sort" name="view-facet-sort" type="checkbox"#if($self.portal.facetSort) checked="checked"#end />
            </p>
        </fieldset>
    </form>
    <button class="update">Update</button>
    <button class="cancel">Cancel</button>
    <img class="hidden" id="view-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
    <span id="view-message"></span>
    #parseTemplate("wrapping/info-box-close.vm")
    #set($menuId = "facets-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "Facets")
    #parseTemplate("wrapping/info-box-open.vm")
    <div class="block category-form" id="facets-form">
        <table>
            <thead>
                <tr>
                    <th width="35%">Field</th>
                    <th width="35%">Label</th>
                    <th width="25%">Display</th>
                    <th>Delete</th>
                </tr>
                #facetRow("facets-blank" "f_new_facet" "New facet" "list" "hidden")
            </thead>
            <tbody id="facets-table">
            #set($fields = $self.getPortal().getFacetFields())
            #foreach($field in $fields.keySet())
                #set($id = "facets-$velocityCount")
                #set($facet = $fields.get($field))
                #set($label = $facet.getString($nullValue, "label"))
                #set($display = $facet.getString($nullValue, "display"))
                #facetRow($id $field $label $display "")
            #end
            </tbody>
        </table>
        <button class="add" rel="facets">Add</button>
        <button class="update">Update</button>
        <button class="cancel">Cancel</button>
        <img class="hidden" id="facets-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
        <span id="facets-message"></span>
    </div>
    #parseTemplate("wrapping/info-box-close.vm")
    #set($menuId = "sort-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "Sort by")
    #parseTemplate("wrapping/info-box-open.vm")
    <div class="block category-form" id="sort-form">
        <table>
            <thead>
                <tr>
                    <th>Default</th>
                    <th width="45%">Field</th>
                    <th width="45%">Label</th>
                    <th>Delete</th>
                </tr>
                #sortRow("sort-blank" "new_field" "New sort field" "hidden")
            </thead>
            <tbody id="sort-table">
            #set($sortFields = $self.portal.sortFields)
            #foreach($field in $sortFields.keySet())
                #set($id = "sort-$velocityCount")
                #set($label = $sortFields.get($field))
                #sortRow($id $field $label "")
            #end
            </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td>Default sort order:
                        <select id="sort-order">
                            <option value="asc"#if($self.portal.sortFieldDefaultOrder=="asc") selected="selected"#end>Ascending</option>
                            <option value="desc"#if($self.portal.sortFieldDefaultOrder=="desc") selected="selected"#end>Descending</option>
                        </select>
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        <button class="add" rel="sort">Add</button>
        <button class="update">Update</button>
        <button class="cancel">Cancel</button>
        <img class="hidden" id="sort-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
        <span id="sort-message"></span>
    </div>
    #parseTemplate("wrapping/info-box-close.vm")
    #set($menuId = "watcher-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "Watcher")
    #parseTemplate("wrapping/info-box-open.vm")
    <div class="block category-form" id="watcher-form">
        #set($watcherConfig = $self.getWatcherConfig())
        #if($watcherConfig)
        <fieldset>
            <table>
                <thead>
                    <tr>
                        <th width="5%">Active</th>
                        <th width="50%">Path</th>
                        <th width="30%">File filter</th>
                        <th width="30%">Dir filter</th>
                        <th>Delete</th>
                    </tr>
                    #watcherRow("watcher-blank" "false" "watchDir" "*.tmp|$*.*" "tmp|temp|.svn|.ice" "hidden")
                </thead>
                <tbody id="watcher-table">
                #set($paths = $watcherConfig.getMap("watcher/watchDirs"))
                #foreach($path in $paths.keySet())
                    #set($options = $paths.get($path))
                    #set($id = "watcher-$velocityCount")
                    #set($stopped = $options.get("stopped"))
                    #set($fileFilter = $options.get("ignoreFileFilter"))
                    #set($dirFilter = $options.get("ignoreDirectories"))
                    #watcherRow($id $stopped $path $fileFilter $dirFilter "")
                #end
                </tbody>
            </table>
            <button class="add" rel="watcher">Add</button>
            <button class="update">Update</button>
            <button class="cancel">Cancel</button>
            <img class="hidden" id="watcher-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
            <span id="watcher-message"></span>
        </fieldset>
        #else
            <p>The Watcher is not installed properly.</p>
        #end
    </div>
    #parseTemplate("wrapping/info-box-close.vm")
    #set($menuId = "housekeeping-section")
    #set($menuClass = "hidden")
    #set($menuTitle = "House Keeping")
    #parseTemplate("wrapping/info-box-open.vm")
    <form class="block category-form" id="housekeeping-form" method="post">
        <fieldset class="login">
            <p>
                <label for="housekeeping-timeout">Frequency (in seconds)</label>
                <input id="housekeeping-timeout" name="housekeeping-timeout" type="text" value="$self.getTimeout()" />
            </p>
        </fieldset>
    </form>
    <button class="update">Update</button>
    <button class="cancel">Cancel</button>
    <img class="hidden" id="housekeeping-loading" src="$portalPath/images/icons/loading.gif" alt="Loading" />
    <span id="housekeeping-message"></span>
    <hr/>
    <p><b>NOTE:</b> You can use 'Update' to cause the House Keeping process to fire now, even without any changes.</p>
    <p/>
    #parseTemplate("wrapping/info-box-close.vm")
</div>
<script type="text/javascript" src="$portalPath/js/jquery-ui-1.7.2.custom.min.js"></script>
<script type="text/javascript" src="$portalPath/js/jquery.cookie.js"></script>
<script type="text/javascript">
<!--
    $(function() {
        // change category
        $(".category").click(function() {
            var category = $(this);
            if (!category.hasClass("selected")) {
                $(".category").removeClass("selected");
                category.addClass("selected");
                $("#form-section > div").addClass("hidden")
                var formId = category.attr("rel");
                $("#" + formId + "-section").removeClass("hidden");
                jQuery.cookie("category", formId, { path: "$portalPath/settings" });
            }
            return false;
        });

        $("#general-category").click();

        // make text fields editable
        $(".field-text").live("click", function() {
            $(this).toggleClass("hidden").toggleClass("visible")
                .next().toggleClass("hidden").toggleClass("inline");
            return false;
        });

        // submit editable fields
        $(".field-form").submit(function() {
            $(this).find(".accept").click();
            return false;
        });

        // accept editable fields
        $(".field-form .accept").live("click", function() {
            var parentEl = $(this).parent(".field-form");
            var textEl = parentEl.prev(".field-text");
            var inputEl = $(this).prev(".field-input");
            parentEl.toggleClass("hidden").toggleClass("inline");
            textEl.toggleClass("hidden").toggleClass("visible");
            var oldValue = textEl.text();
            var newValue = inputEl.val();
            if (oldValue != newValue) {
                textEl.css("font-weight", "bold").text(newValue);
            }
            return false;
        });

        // cancel editable fields
        $(".field-form .cancel").live("click", function() {
            $(this)
                .parent().toggleClass("hidden").toggleClass("inline")
                    .prev().toggleClass("hidden").toggleClass("visible");
            return false;
        });

        // add new table row
        $("button.add").click(function() {
            var rel = $(this).attr("rel");
            var blankRowId = rel + "-blank";
            var tableId = rel + "-table";
            var newRow = $("#" + blankRowId).clone(true).appendTo($("#" + tableId));
            newRow.removeClass("hidden");
            newRow.find(".field-text").css("font-weight", "bold");
            var newId = rel + "-" + ($("#" + tableId + " tr").length);
            newRow.attr("id", newId);
            newRow.find(".field-form").each(function() {
                var id = $(this).attr("id");
                $(this).attr("id", id.replace(blankRowId, newId));
            });
            newRow.find(":input").each(function() {
                var name = $(this).attr("name");
                $(this).attr("name", name.replace(blankRowId, newId));
                $(this).filter("input:checkbox").attr("value", newId);
            });
            newRow.find(".field-text:first").click();
            newRow.find(".field-input:first").focus();
            return false;
        });

        // cancel form changes
        $("button.cancel").click(function() {
            window.location.reload();
            return false;
        });

        // update general category
        $("#general-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#general-loading").show();
            var data = $("#general-form").serialize();
            jQuery.ajax({
                type : "POST",
                url : "$portalPath/actions/settings.ajax?" + data,
                success:
                    function(data, status) {
                        $("#general-loading").hide();
                        $("#general-message").text("Updated successfully");
                        setTimeout(function() { $("#general-message").empty(); }, 3000);
                        $("#general-section button.update").removeAttr("disabled");
                    },
                error:
                    function (req, status, e) {
                        $("#general-loading").hide();
                        $("#general-message").text(req.responseText);
                        setTimeout(function() { $("#general-message").empty(); }, 3000);
                        $("#general-section button.update").removeAttr("disabled");
                    },
                data: {
                    func: "general-update"
                }
            });
        });

        // update view category
        $("#view-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#view-loading").show();
            var data = $("#view-form").serialize();
            jQuery.post("$portalPath/actions/settings.ajax?" + data,
                { func: "view-update" },
                function(data, status) { window.location.reload(); },
                "json");
        });

        // drag n drop sorting of facets
        $("#facets-table, #sort-table").sortable({ axis: 'y' });

        // save facet settings
        $("#facets-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#facets-loading").show();
            var orderArray = $("#facets-table").sortable("toArray");
            var data = "";
            for (var i = 0, len = orderArray.length; i < len; i++) {
                var id = orderArray[i];
                var fField = $("#" + id + "-field .field-input").val();
                var fLabel = $("#" + id + "-label .field-input").val();
                var fDisplay = $("#" + id + "-display .field-input option:selected").attr("name");
                var fDelete = $("#" + id + " .facets-delete").attr("checked");
                data += "&field=" + fField +
                        "&label=" + fLabel +
                        "&display=" + fDisplay +
                        "&delete=" + fDelete;
            }
            jQuery.post("$portalPath/actions/settings.ajax?" + data,
                { func: "facets-update" },
                function(data, status) {
                    $("#facets-table span").css("font-weight", "normal");
                    $("#facets-loading").hide();
                    $(".facets-delete:checked").parents("tr").remove();
                    $("#facets-message").text("Updated successfully");
                    setTimeout(function() { $("#facets-message").empty(); }, 3000);
                    $("#facets-section button.update").removeAttr("disabled");
                },
                "json");
        });

        // save sort settings
        $("#sort-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#sort-loading").show();
            var orderArray = $("#sort-table").sortable("toArray");
            var data = "";
            for (var i = 0, len = orderArray.length; i < len; i++) {
                var id = orderArray[i];
                var fField = $("#" + id + "-field .field-input").val();
                var fLabel = $("#" + id + "-label .field-input").val();
                var fDelete = $("#" + id + " .sort-delete").attr("checked");
                data += "&field=" + fField +
                        "&label=" + fLabel +
                        "&delete=" + fDelete;
            }
            var fDefault = $(".sort-default:checked").val();
            data += "&default=" + fDefault;
            data += "&order=" + $("#sort-order").val();
            jQuery.post("$portalPath/actions/settings.ajax?" + data,
                { func: "sort-update" },
                function(data, status) {
                    $("#sort-table span").css("font-weight", "normal");
                    $("#sort-loading").hide();
                    $(".sort-delete:checked").parents("tr").remove();
                    $("#sort-message").text("Updated successfully");
                    setTimeout(function() { $("#sort-message").empty(); }, 3000);
                    $("#sort-section button.update").removeAttr("disabled");
                },
                "json");
        });

        // save watcher settings
        $("#watcher-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#watcher-loading").show();
            var data = $("#watcher-table :input").serialize();
            var ids = "";
            jQuery.each($("#watcher-table tr:not(:has(.watcher-delete:checked))"),
                function(i, tr) {
                    ids += $(tr).attr("id") + ",";
                });
            ids = ids.substring(ids, ids.length-1);
            jQuery.post("$portalPath/actions/settings.ajax?" + data,
                { func: "watcher-update", pathIds: ids },
                function(data, status) {
                    $("#watcher-table span").css("font-weight", "normal");
                    $("#watcher-loading").hide();
                    $(".watcher-delete:checked").parents("tr").remove();
                    $("#watcher-message").text("Updated successfully");
                    setTimeout(function() { $("#watcher-message").empty(); }, 3000);
                    $("#watcher-section button.update").removeAttr("disabled");
                },
                "json");
        });

        // update housekeeping category
        $("#housekeeping-section button.update").removeAttr("disabled").click(function() {
            $(this).attr("disabled", "disabled");
            $("#housekeeping-loading").show();
            var data = $("#housekeeping-form").serialize();
            jQuery.ajax({
                type : "POST",
                url : "$portalPath/actions/settings.ajax?" + data,
                success:
                    function(data, status) {
                        $("#housekeeping-loading").hide();
                        $("#housekeeping-message").text("Updated successfully");
                        setTimeout(function() { $("#housekeeping-message").empty(); }, 3000);
                        $("#housekeeping-section button.update").removeAttr("disabled");
                    },
                error:
                    function (req, status, e) {
                        $("#housekeeping-loading").hide();
                        $("#housekeeping-message").text(req.responseText);
                        setTimeout(function() { $("#housekeeping-message").empty(); }, 3000);
                        $("#housekeeping-section button.update").removeAttr("disabled");
                    },
                data: {
                    func: "housekeeping-update"
                }
            });
        });

    });
-->
</script>

#end
